Id: 1
Execution stack: 
[(int v|(v=0|(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10)))))]
Symbol table: 
{}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(v=0|(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10)))), int v]
Symbol table: 
{}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(v=0|(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10)))), int v]
Symbol table: 
{}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(v=0|(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10))))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(v=0|(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10))))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10))), v=0]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10))), v=0]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10)))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}|(sleep(5)|print(v * 10)))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=1}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=1}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=0}
Output list: 
[]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[v=v + 1]
Symbol table: 
{v=0}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[v=v + 1]
Symbol table: 
{v=0}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 2
Execution stack: 
[]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=2}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=2}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=1}
Output list: 
[0]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[v=v + 1]
Symbol table: 
{v=1}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, (Fork((print(v)|v=v + 1))|v=v + 1)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[v=v + 1]
Symbol table: 
{v=1}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 3
Execution stack: 
[]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1, Fork((print(v)|v=v + 1))]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}, v=v + 1]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[(print(v)|v=v + 1)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=3}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10)), While(v < 3){(Fork((print(v)|v=v + 1))|v=v + 1)}]
Symbol table: 
{v=3}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[v=v + 1, print(v)]
Symbol table: 
{v=2}
Output list: 
[0, 1]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10))]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[v=v + 1]
Symbol table: 
{v=2}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[(sleep(5)|print(v * 10))]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[v=v + 1]
Symbol table: 
{v=2}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(5)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 4
Execution stack: 
[]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(5)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(4)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(4)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(3)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(3)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(2)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(2)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(1)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(1)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(0)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10), sleep(0)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[print(v * 10)]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2]
File table: 
{}
Heap: 
{}

Id: 1
Execution stack: 
[]
Symbol table: 
{v=3}
Output list: 
[0, 1, 2, 30]
File table: 
{}
Heap: 
{}

